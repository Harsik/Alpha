buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'gs-accessing-data-mysql'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    // compile("org.springframework.boot:spring-boot-starter-tomcat")
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    //compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
    compile ("io.jsonwebtoken:jjwt:0.9.0")
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
    // compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.8'
    compile ("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)   
    // compile("org.springframework.boot:spring-boot-starter-data-redis")
    // compile("org.springframework.session:spring-session-data-redis") 
    // compile("io.lettuce:lettuce-core") 
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    compileOnly 'org.projectlombok:lombok:1.18.6'
	annotationProcessor 'org.projectlombok:lombok:1.18.6'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
    compileOnly('org.projectlombok:lombok')
    
}

